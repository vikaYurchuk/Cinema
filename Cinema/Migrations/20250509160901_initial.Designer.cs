// <auto-generated />
using System;
using Cinema.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cinema.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    [Migration("20250509160901_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cinema.Entities.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.ToTable("CinemaActors4");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilmId = 1,
                            FirstName = "Tim",
                            LastName = "Robbins"
                        },
                        new
                        {
                            Id = 2,
                            FilmId = 1,
                            FirstName = "Morgan",
                            LastName = "Freeman"
                        },
                        new
                        {
                            Id = 3,
                            FilmId = 2,
                            FirstName = "Marlon",
                            LastName = "Brando"
                        },
                        new
                        {
                            Id = 4,
                            FilmId = 2,
                            FirstName = "Al",
                            LastName = "Pacino"
                        },
                        new
                        {
                            Id = 5,
                            FilmId = 3,
                            FirstName = "Christian",
                            LastName = "Bale"
                        },
                        new
                        {
                            Id = 6,
                            FilmId = 3,
                            FirstName = "Heath",
                            LastName = "Ledger"
                        },
                        new
                        {
                            Id = 7,
                            FilmId = 4,
                            FirstName = "Tom",
                            LastName = "Hanks"
                        },
                        new
                        {
                            Id = 8,
                            FilmId = 4,
                            FirstName = "Robin",
                            LastName = "Wright"
                        },
                        new
                        {
                            Id = 9,
                            FilmId = 5,
                            FirstName = "Leonardo",
                            LastName = "DiCaprio"
                        },
                        new
                        {
                            Id = 10,
                            FilmId = 5,
                            FirstName = "Joseph",
                            LastName = "Gordon-Levitt"
                        },
                        new
                        {
                            Id = 11,
                            FilmId = 6,
                            FirstName = "Keanu",
                            LastName = "Reeves"
                        },
                        new
                        {
                            Id = 12,
                            FilmId = 6,
                            FirstName = "Laurence",
                            LastName = "Fishburne"
                        },
                        new
                        {
                            Id = 13,
                            FilmId = 7,
                            FirstName = "Harrison",
                            LastName = "Ford"
                        },
                        new
                        {
                            Id = 14,
                            FilmId = 7,
                            FirstName = "Mark",
                            LastName = "Hamill"
                        },
                        new
                        {
                            Id = 15,
                            FilmId = 7,
                            FirstName = "Markus",
                            LastName = "Hamillian"
                        });
                });

            modelBuilder.Entity("Cinema.Entities.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cover")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FilmTeams4", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cover = "https://www.musiconvinyl.com/cdn/shop/files/MOVATM091_Sleeve.webp?v=1713507987&width=1445",
                            Duration = 142,
                            Genre = "Drama",
                            Name = "The Shawshank Redemption",
                            Year = 1994
                        },
                        new
                        {
                            Id = 2,
                            Cover = "https://www.northjersey.com/gcdn/presto/2022/03/22/PNJM/0d896a12-005e-4d8f-b29f-19595efd5c6f-The_Godfather_50th.jpg?width=600&height=904&fit=crop&format=pjpg&auto=webp",
                            Duration = 175,
                            Genre = "Crime, Drama",
                            Name = "The Godfather",
                            Year = 1972
                        },
                        new
                        {
                            Id = 3,
                            Cover = "https://m.media-amazon.com/images/S/pv-target-images/e9a43e647b2ca70e75a3c0af046c4dfdcd712380889779cbdc2c57d94ab63902.jpg",
                            Duration = 152,
                            Genre = "Action, Crime, Drama",
                            Name = "The Dark Knight",
                            Year = 2008
                        },
                        new
                        {
                            Id = 4,
                            Cover = "https://upload.wikimedia.org/wikipedia/ru/d/de/%D0%A4%D0%BE%D1%80%D1%80%D0%B5%D1%81%D1%82_%D0%93%D0%B0%D0%BC%D0%BF.jpg",
                            Duration = 142,
                            Genre = "Drama, Romance",
                            Name = "Forrest Gump",
                            Year = 1994
                        },
                        new
                        {
                            Id = 5,
                            Cover = "https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_.jpg",
                            Duration = 148,
                            Genre = "Action, Adventure, Sci-Fi",
                            Name = "Inception",
                            Year = 2010
                        },
                        new
                        {
                            Id = 6,
                            Cover = "https://i.scdn.co/image/ab67616d0000b273cb10bbc00c7732aec1b81fb2",
                            Duration = 136,
                            Genre = "Action, Sci-Fi",
                            Name = "The Matrix",
                            Year = 1999
                        },
                        new
                        {
                            Id = 7,
                            Cover = "https://upload.wikimedia.org/wikipedia/en/3/3f/The_Empire_Strikes_Back_%281980_film%29.jpg",
                            Duration = 124,
                            Genre = "Action, Adventure, Fantasy",
                            Name = "The Empire Strikes Back",
                            Year = 1980
                        },
                        new
                        {
                            Id = 8,
                            Cover = "https://upload.wikimedia.org/wikipedia/en/3/3b/Pulp_Fiction_%281994%29_poster.jpg",
                            Duration = 154,
                            Genre = "Crime, Drama",
                            Name = "Pulp Fiction",
                            Year = 1994
                        },
                        new
                        {
                            Id = 9,
                            Cover = "https://upload.wikimedia.org/wikipedia/en/1/18/Titanic_%281997_film%29_poster.png",
                            Duration = 195,
                            Genre = "Drama, Romance",
                            Name = "Titanic",
                            Year = 1997
                        },
                        new
                        {
                            Id = 10,
                            Cover = "https://lumiere-a.akamaihd.net/v1/images/avatar_800x1200_208c9665.jpeg?region=0%2C0%2C800%2C1200",
                            Duration = 162,
                            Genre = "Sci-Fi, Adventure",
                            Name = "Avatar",
                            Year = 2009
                        },
                        new
                        {
                            Id = 11,
                            Cover = "https://m.media-amazon.com/images/M/MV5BNzY3OWQ5NDktNWQ2OC00ZjdlLThkMmItMDhhNDk3NTFiZGU4XkEyXkFqcGc@._V1_.jpg",
                            Duration = 122,
                            Genre = "Drama, Thriller",
                            Name = "Joker",
                            Year = 2019
                        },
                        new
                        {
                            Id = 12,
                            Cover = "https://upload.wikimedia.org/wikipedia/en/0/0d/Avengers_Endgame_poster.jpg",
                            Duration = 181,
                            Genre = "Action, Sci-Fi",
                            Name = "Avengers: Endgame",
                            Year = 2019
                        });
                });

            modelBuilder.Entity("Cinema.Entities.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<string>("Hall")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilmId = 1,
                            Hall = "Main Hall",
                            Price = 150.00m,
                            StartTime = new DateTime(2025, 5, 10, 19, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            FilmId = 7,
                            Hall = "VIP Hall",
                            Price = 200.00m,
                            StartTime = new DateTime(2025, 5, 11, 21, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            FilmId = 8,
                            Hall = "Hall 2",
                            Price = 140.00m,
                            StartTime = new DateTime(2025, 5, 12, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            FilmId = 9,
                            Hall = "Hall 3",
                            Price = 180.00m,
                            StartTime = new DateTime(2025, 5, 12, 20, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            FilmId = 10,
                            Hall = "IMAX",
                            Price = 220.00m,
                            StartTime = new DateTime(2025, 5, 13, 18, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            FilmId = 11,
                            Hall = "Hall 1",
                            Price = 160.00m,
                            StartTime = new DateTime(2025, 5, 13, 21, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            FilmId = 12,
                            Hall = "Main Hall",
                            Price = 210.00m,
                            StartTime = new DateTime(2025, 5, 14, 16, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            FilmId = 1,
                            Hall = "VIP Hall",
                            Price = 170.00m,
                            StartTime = new DateTime(2025, 5, 15, 19, 15, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Cinema.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Cinema.Entities.Actor", b =>
                {
                    b.HasOne("Cinema.Entities.Film", "Film")
                        .WithMany("Actors")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");
                });

            modelBuilder.Entity("Cinema.Entities.Session", b =>
                {
                    b.HasOne("Cinema.Entities.Film", "Film")
                        .WithMany()
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");
                });

            modelBuilder.Entity("Cinema.Entities.Film", b =>
                {
                    b.Navigation("Actors");
                });
#pragma warning restore 612, 618
        }
    }
}
